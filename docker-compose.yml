services:

  controller-0:
    image: apache/kafka:latest
    container_name: controller-0
    environment:
      KAFKA_NODE_ID: 1  # Unique node ID for this Kafka node
      KAFKA_PROCESS_ROLES: controller  # This node acts only as a controller
      KAFKA_LISTENERS: CONTROLLER://:9091  # Controller traffic: listens on port 9091
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER  # Listener name for controller communication
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT  # Security protocol mapping
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-0:9091, 2@broker-controller-0:9091, 3@broker-controller-1:9091  # Quorum voters
      CLUSTER_ID: kraft-cluster  # Cluster ID for the KRaft cluster
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs  # Log directory for Kafka metadata
    networks:
      - kafka-net

  # Broker + Controller combo node
  broker-controller-0:
    image: apache/kafka:latest
    container_name: broker-controller-0
    ports:
      - 19092:9092  # External access to broker on port 19092
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_PROCESS_ROLES: broker,controller  # This node acts as both broker and controller
      KAFKA_LISTENERS: INTERNAL://:9090, CONTROLLER://:9091, EXTERNAL://:9092  # Listener setup
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://broker-controller-0:9090, EXTERNAL://localhost:19092  # Advertised listeners
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL  # Listener used for inter-broker communication
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-0:9091, 2@broker-controller-0:9091, 3@broker-controller-1:9091
      CLUSTER_ID: kraft-cluster
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
    networks:
      - kafka-net

  # Another Broker + Controller combo node
  broker-controller-1:
    image: apache/kafka:latest
    container_name: broker-controller-1
    ports:
      - 29092:9092
    environment:
      KAFKA_NODE_ID: 3
      KAFKA_PROCESS_ROLES: broker, controller
      KAFKA_LISTENERS: INTERNAL://:9090, CONTROLLER://:9091, EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://broker-controller-1:9090, EXTERNAL://localhost:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-0:9091, 2@broker-controller-0:9091, 3@broker-controller-1:9091
      CLUSTER_ID: kraft-cluster
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
    networks:
      - kafka-net

  # Broker-only node
  broker-0:
    image: apache/kafka:latest
    container_name: broker-0
    ports:
      - 39092:9092  
    environment:
      KAFKA_NODE_ID: 4
      KAFKA_PROCESS_ROLES: broker  # This node acts only as a broker
      KAFKA_LISTENERS: INTERNAL://:9090, EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://broker-0:9090, EXTERNAL://localhost:39092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-0:9091, 2@broker-controller-0:9091, 3@broker-controller-1:9091
      CLUSTER_ID: kraft-cluster
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
    networks:
      - kafka-net

  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    container_name: schema-registry
    ports:
      - "8082:8082"
    depends_on:
      - controller-0
      - broker-controller-0
      - broker-controller-1
      - broker-0

    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8082
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://broker-0:9090

    networks:
      - kafka-net

  redpanda-console:
    image: docker.redpanda.com/redpandadata/console:latest
    container_name: redpanda-console
    ports:
      - "8080:8080"
    environment:
      KAFKA_BROKERS: broker-controller-0:9090,broker-controller-1:9090,broker-0:9090
      SCHEMA_REGISTRY: http://schema-registry:8082
    depends_on:
      - broker-controller-0
      - broker-controller-1
      - broker-0
      - schema-registry

    networks:
      - kafka-net

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minio123
      MINIO_ROOT_PASSWORD: minio123
    command: server /data --console-address ":9001"
    networks:
      - kafka-net



  spark-master:
    build:
      context: ./docker_image/spark
      dockerfile: ./Dockerfile
    container_name: "spark-master"
    ports:
      - "7077:7077" # Spark master port
      - "8081:8080" # Spark master web UI port
    expose:
      - "7077"
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    volumes:
      - ./docker_image/spark/conf/log4j.properties:/opt/bitnami/spark/conf/log4j.properties
      - ./docker_image/spark/conf/spark-defaults.conf:/opt/bitnami/spark/conf/spark-defaults.conf
      - ./jars:/opt/bitnami/spark/custom-jars
      - ./spark_consumer:/opt/bitnami/spark/spark_consumer
    networks:
      - kafka-net

  spark-worker-1:
    image: docker.io/bitnami/spark:3.5.0
    container_name: "spark-worker-1"
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=3G
      - SPARK_WORKER_CORES=2
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    depends_on:
      - spark-master
    networks:
      - kafka-net
    
  spark-worker-2:
    image: docker.io/bitnami/spark:3.5.0
    container_name: "spark-worker-2"
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=3G
      - SPARK_WORKER_CORES=2
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    depends_on:
      - spark-master
    networks:
      - kafka-net


  spark-worker-3:
    image: docker.io/bitnami/spark:3.5.0
    container_name: "spark-worker-3"
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=3G
      - SPARK_WORKER_CORES=2
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    depends_on:
      - spark-master
    networks:
      - kafka-net


  jupyter-spark:
    image: jupyter/pyspark-notebook:spark-3.5.0
    container_name: "notebook"
    ports:
      - "8888:8888"
      - "4040-4080:4040-4080"
    volumes:
      - ./jupyter/notebooks:/home/jovyan/work/
      - ./jars:/home/jovyan/jars/
    networks:
      - kafka-net
    depends_on:
      - spark-master
    user: root
    command: start-notebook.sh --NotebookApp.token='' --NotebookApp.allow_root=True
# Kafka custom network for internal communication
networks:
  kafka-net:
    driver: bridge  